name: Release
run-name: "Release ${{ inputs.version }} on ${{ inputs.target_branch }}"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version string"
        required: true
        type: string
      target_branch:
        description: "The branch where the changelog will be updated and the version bumped"
        required: true
        type: string

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      SEM_VER: ${{ steps.parse.outputs.sem_ver }}
      BUILD_DATE: ${{ steps.parse.outputs.build_date }}
      RUN_ID: ${{ steps.parse.outputs.run_id }}
      COMMIT_SHA: ${{ steps.parse.outputs.commit_sha }}
      MAJOR: ${{ steps.parse.outputs.major }}
      MINOR: ${{ steps.parse.outputs.minor }}
      PATCH: ${{ steps.parse.outputs.patch }}
    steps:
      - name: Validate version format
        uses: uniport/workflows/.github/actions/validate-version@main
        with:
          version: ${{ inputs.version }}

      - name: Check if target branch exists
        id: branch_check
        uses: uniport/workflows/.github/actions/ensure-branch@main
        with:
          branch: ${{ inputs.target_branch }}

      - name: Parse version string
        id: parse
        uses: uniport/workflows/.github/actions/parse-version@main
        with:
          version: ${{ inputs.version }}

      - name: Summary
        shell: bash
        run: |
          cat >> $GITHUB_STEP_SUMMARY <<EOF
          ### Inputs
          - **version**: \`${{ inputs.version }}\`
          - **target_branch**: \`${{ inputs.target_branch }}\`

          ## Parse Version
          ### Outputs
          - **SEM_VER**: \`${{ steps.parse.outputs.SEM_VER }}\`
          - **BUILD_DATE**: \`${{ steps.parse.outputs.BUILD_DATE }}\`
          - **RUN_ID**: \`${{ steps.parse.outputs.RUN_ID }}\`
          - **COMMIT_SHA**: \`${{ steps.parse.outputs.COMMIT_SHA }}\`

          ## Parse SemVer
          ### Outputs
          - **MAJOR**: \`${{ steps.parse.outputs.MAJOR }}\`
          - **MINOR**: \`${{ steps.parse.outputs.MINOR }}\`
          - **PATCH**: \`${{ steps.parse.outputs.PATCH }}\`
          EOF

  move-artifacts:
    name: Move artifacts on Nexus3
    needs: [setup]
    uses: uniport/workflows/.github/workflows/move-nexus-artifacts.yml@main
    with:
      version: ${{ inputs.version }}
      move_docker_helm: true
      move_maven: true
    secrets:
      NEXUS3_PW: ${{ secrets.NEXUS3_PW }}

  git-tag:
    name: Create git tag
    needs: [setup]
    uses: uniport/workflows/.github/workflows/git-tag.yml@main
    permissions:
      contents: write # create tag
    with:
      tag_name: "${{ needs.setup.outputs.SEM_VER }}"
      tag_message: "${{ inputs.version }}"
      commit_sha: "${{ needs.setup.outputs.COMMIT_SHA }}"

  changelog:
    name: Update changelog
    needs: [setup]
    uses: uniport/workflows/.github/workflows/changelog-update.yml@main
    permissions:
      contents: write # update changelog
    with:
      version: ${{ inputs.version }}
      branch_name: ${{ inputs.target_branch }}

  git-patch-branch:
    name: Create patch branch
    needs: [setup]
    uses: uniport/workflows/.github/workflows/git-patch-branch-create.yml@main
    permissions:
      contents: write # create branch
    with:
      major: ${{ needs.setup.outputs.MAJOR }}
      minor: ${{ needs.setup.outputs.MINOR }}
      patch: ${{ needs.setup.outputs.PATCH }}

  bump-version:
    name: Bump version
    needs: [setup]
    uses: uniport/workflows/.github/workflows/version-bump.yml@main
    permissions:
      contents: write # update version
    with:
      major: ${{ needs.setup.outputs.MAJOR }}
      minor: ${{ needs.setup.outputs.MINOR }}
      patch: ${{ needs.setup.outputs.PATCH }}
      branch_name: ${{ inputs.target_branch }}

  jira-release:
    name: Do Jira release
    needs: [setup]
    uses: uniport/workflows/.github/workflows/jira-release.yml@main
    with:
      version: ${{ inputs.version }}
      semver: ${{ needs.setup.outputs.SEM_VER }}
      component_name: Uniport-Gateway
    secrets:
      ATLASSIAN_AUTH_PSW: ${{ secrets.ATLASSIAN_AUTH_PSW }}

  archetype:
    name: Update Archetype
    needs: [setup]
    uses: uniport/workflows/.github/workflows/update-archetype.yml@main
    with:
      version: ${{ inputs.version }}
      component_name: uniport-gateway
      command: release
    secrets:
      UNIPORT_APP_PRIVATE_KEY: ${{ secrets.UNIPORT_APP_PRIVATE_KEY }}

  announce:
    name: Announce new release
    needs:
      - setup
      - move-artifacts
      - git-tag
      - changelog
      - git-patch-branch
      - bump-version
      - jira-release
      - archetype
    runs-on: ubuntu-latest
    steps:
      - name: Notify uniport team
        uses: uniport/workflows/.github/actions/send-rocket-chat-message@main
        with:
          webhook_url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
          channel: uniport
          message: |
            A **new release** just happened! ðŸš€

            [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md): `${{ inputs.version }}`
