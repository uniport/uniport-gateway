<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.inventage.portal.gateway</groupId>
    <artifactId>pom</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- because we deploy via nexus-staging-maven-plugin -->
        <maven.deploy.skip>true</maven.deploy.skip>

        <docker.image.name>${project.groupId}.${project.artifactId}</docker.image.name>
        <docker.pull.registry>docker-registry.inventage.com:10094</docker.pull.registry>
        <docker.push.registry>docker-registry.inventage.com:10095</docker.push.registry>
        <docker.verbose>true</docker.verbose>

        <junit-jupiter.version>5.7.0</junit-jupiter.version>

        <jib.goal>build</jib.goal>

        <portal-helm-chart-library.version>3.0.0-202201292336-94-260507b</portal-helm-chart-library.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-stack-depchain</artifactId>
                <version>4.0.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- logging facade -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.28</version>
            </dependency>
            <!-- logging backend -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>
            <!-- contextual logging (like MDC) -->
            <dependency>
                <groupId>io.reactiverse</groupId>
                <artifactId>reactiverse-contextual-logging</artifactId>
                <version>1.1.2</version>
            </dependency>
            <!-- data pump for proxying -->
            <dependency>
                <groupId>com.inventage.vertx</groupId>
                <artifactId>vertx-http-proxy</artifactId>
                <version>1.0.0-202104101824-19-e161403</version>
            </dependency>
            <!-- for substituting variables in config via StringSubstitutor.replace -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.8</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>11</release>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <!-- Code Coverage report generation -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.6</version>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <!-- https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin -->
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>${jib.goal}</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <from>
                            <image>${docker.pull.registry}/eclipse-temurin:11-jre</image>
                        </from>
                        <to>
                            <image>${docker.push.registry}/${docker.image.name}</image>
                            <tags>
                                <tag>${project.version}</tag>
                            </tags>
                        </to>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.38.1</version>
                    <configuration>
                        <images>
                            <image>
                                <name>${docker.push.registry}/${docker.image.name}</name>
                                <build>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <contextDir>${docker.context}</contextDir>
                                    <tags>
                                        <tag>latest</tag>
                                        <tag>${project.version}</tag>
                                    </tags>
                                    <filter>false</filter>
                                </build>
                            </image>
                        </images>
                    </configuration>
                    <executions>
                        <!-- build image -->
                        <execution>
                            <id>build-image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <!-- tag image -->
                        <execution>
                            <id>tag-image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                        </execution>
                        <!-- push image -->
                        <execution>
                            <id>push-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- for staging with Nexus2 -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.5</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- auch im Jenkins Config File "settings.xml" referenziert -->
                    <serverId>inventage-portal-staging</serverId>
                    <nexusUrl>https://nexus.inventage.com</nexusUrl>
                    <!-- inventage-portal staging -->
                    <stagingProfileId>2784e0aacf5060</stagingProfileId>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <!-- needs to be deactivated in Jenkinsfile -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- for local builds this should be the same as pull registry, so that we can use locally docker-compose.yml -->
            <properties>
                <docker.push.registry>${docker.pull.registry}</docker.push.registry>
                <jib.goal>dockerBuild</jib.goal>
            </properties>
        </profile>
    </profiles>

    <!-- must be added as a server to ~/.m2/settings.xml -->
    <repositories>
        <repository>
            <!-- for accessing com.inventage.vertx.vertx-http-proxy -->
            <id>inventage-projectware</id>
            <name>Inventage Projectware</name>
            <url>https://nexus.inventage.com/content/groups/projectware/</url>
        </repository>
        <repository>
            <id>inventage-portal-group</id>
            <name>Inventage Portal Solution</name>
            <url>https://nexus.inventage.com/content/groups/inventage-portal-group/</url>
        </repository>
    </repositories>
</project>
