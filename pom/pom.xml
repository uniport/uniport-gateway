<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.inventage.portal.gateway</groupId>
    <artifactId>pom</artifactId>
    <version>1.4.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>        <!-- because we deploy via nexus-staging-maven-plugin -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <vertx.version>4.0.3</vertx.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <jacoco.version>0.8.6</jacoco.version>

        <docker.pull.registry>docker-registry.inventage.com:10094</docker.pull.registry>
        <docker.push.registry>docker-registry.inventage.com:10095</docker.push.registry>

        <portal-helm-chart-library.version>1.2.0-202107140911-38-29e2f17</portal-helm-chart-library.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-stack-depchain</artifactId>
                <version>${vertx.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- logging facade -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.28</version>
            </dependency>
            <!-- logging backend -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>
            <!-- data pump for proxying -->
            <dependency>
                <groupId>com.inventage.vertx</groupId>
                <artifactId>vertx-http-proxy</artifactId>
                <version>1.0.0-202104101824-19-e161403</version>
            </dependency>
            <!-- for substituting variables in config via StringSubstitutor.replace -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.8</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>org.jetbrains</groupId>-->
            <!--                <artifactId>annotations</artifactId>-->
            <!--                <version>RELEASE</version>-->
            <!--                <scope>compile</scope>-->
            <!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>11</release>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.2.4</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <!-- To avoid "java.lang.SecurityException: Invalid signature file digest for Manifest main attributes" we need to exclude manifest signature files -->
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                                <transformers>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <manifestEntries>
                                            <Main-Class>com.inventage.portal.gateway.PortalGatewayLauncher</Main-Class>
                                            <Main-Verticle>com.inventage.portal.gateway.core.PortalGatewayVerticle</Main-Verticle>
                                        </manifestEntries>
                                    </transformer>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                </transformers>
                                <artifactSet>
                                </artifactSet>
                                <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar
                                </outputFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <!-- Code Coverage report generation -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- for staging with Nexus2 -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.5</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>inventage-portal-staging</serverId>                    <!-- auch im Jenkins Config File "settings.xml" referenziert -->
                    <nexusUrl>https://nexus.inventage.com</nexusUrl>
                    <stagingProfileId>2784e0aacf5060</stagingProfileId>                    <!-- inventage-portal staging -->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>        <!-- must be added as a server to ~/.m2/settings.xml -->
        <repository>
            <!-- for accessing com.inventage.vertx.vertx-http-proxy -->
            <id>inventage-projectware</id>
            <name>Inventage Projectware</name>
            <url>https://nexus.inventage.com/content/groups/projectware/</url>
        </repository>
        <repository>
            <id>inventage-portal-group</id>
            <name>Inventage Portal Solution</name>
            <url>https://nexus.inventage.com/content/groups/inventage-portal-group/</url>
        </repository>
    </repositories>
</project>
