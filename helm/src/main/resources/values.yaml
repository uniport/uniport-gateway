version: ${project.version}

replicaCount: 1

ingress:
  enabled: true
  host: portal
  port: 20000
  className: ""
  annotations: {}
  defaultRule: enabled

service:
  type: ClusterIP
  ports:
    - name: portal-gateway
      port: 20000

podSecurityContext:
  enabled: false

initContainers:
  init-portal-iam:
    image: busybox:1.33
    command:
      - "sh"
      - "-c"
      - "while ! wget --quiet --server-response --spider http://portal-iam:8080/auth/realms/portal; do sleep 1; done"

containers:
  portal-gateway:
    image:
      registry: ${docker.pull.registry}
      baseName: ${project.groupId}
      name: portal-gateway
      tag: ${project.version}
      pullPolicy: IfNotPresent
    containerSecurityContext:
      enabled: false
    ports:
      - name: http
        port: 20000
    resources:
      requests:
        memory: "256Mi"
      limits:
        memory: "256Mi"
    env:
        # PORTAL_GATEWAY_PUBLIC_PROTOCOL HTTP protocol for external access
      - name: "PORTAL_GATEWAY_PUBLIC_PROTOCOL"
        value: "http"
        # PORTAL_GATEWAY_PUBLIC_HOSTNAME HTTP host name for external access
      - name: "PORTAL_GATEWAY_PUBLIC_HOSTNAME"
        value: "portal.minikube"
        # PORTAL_GATEWAY_PUBLIC_PORT HTTP port for external access, must be the same as the exposed port
      - name: "PORTAL_GATEWAY_PUBLIC_PORT"
        value: "80"
        # PORTAL_GATEWAY_LOG_LEVEL is the overall log level and can be one of TRACE, DEBUG, INFO, WARN, ERROR, ALL or OFF
      - name: PORTAL_GATEWAY_LOG_LEVEL
        value: "INFO"
        # PORTAL_GATEWAY_LOGGING_CONFIG is the location of the custom logback configuration file
      - name: PORTAL_GATEWAY_LOGGING_CONFIG
        value: "/etc/portal-gateway/logback.xml"
        # PORTAL_GATEWAY_PORTAL_IAM_HOST is the hostname of the portal-iam
      - name: "PORTAL_GATEWAY_PORTAL_IAM_HOST"
        value: "portal-iam"
        # PORTAL_GATEWAY_PORTAL_IAM_PORT is the port of the portal-iam host
      - name: "PORTAL_GATEWAY_PORTAL_IAM_PORT"
        value: "8080"
        # PORTAL_GATEWAY_BASE_HOST is the hostname for accessing Base microservice via HTTP
      - name: "PORTAL_GATEWAY_BASE_HOST"
        value: "base"
        # PORTAL_GATEWAY_BASE_PORT is the port for accessing the Base microservice via HTTP
      - name: "PORTAL_GATEWAY_BASE_PORT"
        value: "20010"
        # PORTAL_GATEWAY_DASHBOARD_HOST is the hostname for accessing Dashboard microservice via HTTP
      - name: "PORTAL_GATEWAY_DASHBOARD_HOST"
        value: "dashboard"
        # PORTAL_GATEWAY_DASHBOARD_PORT is the port for accessing Dashboard microservice via HTTP
      - name: "PORTAL_GATEWAY_DASHBOARD_PORT"
        value: "20020"
        # PORTAL_GATEWAY_ORGANISATION_HOST is the hostname for accessing Organisation microservice via HTTP
      - name: "PORTAL_GATEWAY_ORGANISATION_HOST"
        value: "organisation"
        # PORTAL_GATEWAY_ORGANISATION_PORT is the port for accessing Organisation microservice via HTTP
      - name: "PORTAL_GATEWAY_ORGANISATION_PORT"
        value: "20030"
        # PORTAL_GATEWAY_DOCUMENT_HOST is the hostname for accessing Document microservice via HTTP
      - name: "PORTAL_GATEWAY_DOCUMENT_HOST"
        value: "document"
        # PORTAL_GATEWAY_DOCUMENT_PORT is the port for accessing Document microservice via HTTP
      - name: "PORTAL_GATEWAY_DOCUMENT_PORT"
        value: "20050"
        # PORTAL_GATEWAY_FILESTORAGE_HOST is the hostname for accessing FileStorage microservice via HTTP
      - name: "PORTAL_GATEWAY_FILESTORAGE_HOST"
        value: "filestorage"
        # PORTAL_GATEWAY_FILESTORAGE_PORT is the port for accessing FileStorage microservice via HTTP
      - name: "PORTAL_GATEWAY_FILESTORAGE_PORT"
        value: "20090"
        # PORTAL_GATEWAY_CONTENT_HOST is the hostname for accessing Content microservice via HTTP
      - name: "PORTAL_GATEWAY_CONTENT_HOST"
        value: "content"
        # PORTAL_GATEWAY_CONTENT_PORT is the port for accessing Content microservice via HTTP
      - name: "PORTAL_GATEWAY_CONTENT_PORT"
        value: "20110"
      # PORTAL_GATEWAY_CONVERSATION_HOST is the hostname for accessing Conversation microservice via HTTP
      - name: "PORTAL_GATEWAY_CONVERSATION_HOST"
        value: "conversation"
      # PORTAL_GATEWAY_CONVERSATOPM_PORT is the port for accessing Conversation microservice via HTTP
      - name: "PORTAL_GATEWAY_CONVERSATION_PORT"
        value: "20120"
        # PORTAL_GATEWAY_PORTAL_KOWL_HOST is the hostname for accessing Portal-Kowl via HTTP
      - name: PORTAL_GATEWAY_PORTAL_KOWL_HOST
        value: "portal-kowl"
        # PORTAL_GATEWAY_PORTAL_KOWL_PORT is the port for accessing Content Portal-Kowl via HTTP
      - name: PORTAL_GATEWAY_PORTAL_KOWL_PORT
        value: "8080"
        # PORTAL_GATEWAY_PORTAL_PGADMIN_HOST is the hostname for accessing PgAdmin via HTTP
      - name: PORTAL_GATEWAY_PORTAL_PGADMIN_HOST
        value: portal-pgadmin
        # PORTAL_GATEWAY_PORTAL_PGADMIN_PORT is the port for accessing PgAdmin via HTTP
      - name: PORTAL_GATEWAY_PORTAL_PGADMIN_PORT
        value: "80"
        # PORTAL_GATEWAY_PORTAL_GRAFANA_HOST is the hostname for accessing Grafana via HTTP
      - name: PORTAL_GATEWAY_PORTAL_GRAFANA_HOST
        value: "grafana-service.monitoring"
        # PORTAL_GATEWAY_PORTAL_GRAFANA_PORT is the port for accessing Grafana via HTTP
      - name: PORTAL_GATEWAY_PORTAL_GRAFANA_PORT
        value: "3000"
      # PORTAL_GATEWAY_BEARER_TOKEN_PUBLIC_KEY describes the path or url to the public key. this is required to verify the signature of incoming jwts.
      - name: PORTAL_GATEWAY_BEARER_TOKEN_PUBLIC_KEY
        value: "http://portal-iam:8080/auth/realms/portal"
      # PORTAL_GATEWAY_BEARER_TOKEN_ISSUER the issuer expected in the access token
      - name: PORTAL_GATEWAY_BEARER_TOKEN_ISSUER
        value: "http://portal.minikube/auth/realms/portal"
      # PORTAL_GATEWAY_BEARER_TOKEN_OPTIONAL dictates if the proxy should expect (and therefore verify) an access token
      - name: PORTAL_GATEWAY_BEARER_TOKEN_OPTIONAL
        value: "false"
      # OTEL_SERVICE_NAME is the name of the service
      - name: OTEL_SERVICE_NAME
        value: "portal-gateway"
      # OTEL_TRACES_EXPORTER is the list of exporters used for tracing, separated by commas
      - name: OTEL_TRACES_EXPORTER
        value: "none"
      # OTEL_METRICS_EXPORTER is the list of exporters user for metrics, separated by commas
      - name: OTEL_METRICS_EXPORTER
        value: "none"
    storages: []
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 10
      timeoutSeconds: 1
      periodSeconds: 20
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 10
      timeoutSeconds: 1
      periodSeconds: 20
      failureThreshold: 6
      successThreshold: 1
    startupProbe:
      enabled: true
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 10
      timeoutSeconds: 1
      periodSeconds: 20
      failureThreshold: 6
      successThreshold: 1
